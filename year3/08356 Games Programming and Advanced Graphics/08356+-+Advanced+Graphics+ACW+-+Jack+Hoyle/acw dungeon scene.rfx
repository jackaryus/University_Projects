<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace |
      RmRegistryBranch |
      RmClipboardNode
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmPlugInData?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect?, RmOpenGLESEffect? ) |
         ( RmOpenGLESEffect, RmDirectXEffect?, RmOpenGLEffect? )
      )?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLPass
      )*
   )>
   
   <!ELEMENT RmOpenGLESEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLESPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmTessellationNode?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>

   <!ELEMENT RmGLESPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLESShader, RmGLESShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmIntegerVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>      
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmGLESShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable
      )*
   )>
   
   <!ELEMENT RmTextureObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmState 
      )*
   )>

   <!ELEMENT RmTessellationNode
   (
      RmPlugInData?,
      RmStringVariable*
   )>
   
   <!ELEMENT RmStreamMap
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmPlugInData?, RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmPlugInData?, RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmFloatVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmVectorVariable       ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMatrixVariable       ( RmPlugInData?, RmStringVariable? )>   
   <!ELEMENT RmColorVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmIntegerVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm2DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCubemapVariable      ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT Rm3DTextureVariable    ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmLightVariable        ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmMaterialVariable     ( RmPlugInData?, RmStringVariable? )>
   <!ELEMENT RmCamera               ( RmPlugInData?, RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock, RmPlugInData? )>
   
   <!ELEMENT RmDynamicVariable
   (
      RmDynamicVariableValueContainer,
      RmPlugInData?,
      RmStringVariable?
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmPlugInData?,
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
         RmRegistryBranch |
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable
      )*      
   )>

   <!ELEMENT RmPlugInData
   ( 
      RmTextDataBlock?,
      (
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable
      )*      
   )>
   
   <!ELEMENT RmClipboardNode
   (
      RmTextDataBlock?,
      (
         RmEffectWorkspace |
         RmEffectGroup |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmOpenGLESEffect |
         RmPass |
         RmGLPass |
         RmGLESPass |
         RmShader |
         RmHLSLShader |
         RmGLShader |
         RmGLESShader |
         RmShaderConstant |
         RmSampler |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmRenderStateBlock |
         RmState |
         RmStreamMap |
         RmStream |
         RmStreamChannel |
         RmModelData |
         RmTextureReference |
         RmLightReference |
         RmMaterialReference |
         RmModelReference |
         RmStreamMapReference |
         RmRenderableTexture |
         RmRenderTarget |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmDynamicVariableValue |
         RmColorVariable |
         RmIntegerVariable |
         RmStringVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRegistryBranch |
         RmPlugInData |
         RmCamera |
         RmCameraReference
      )*      
   )>
   
   <!ELEMENT RmStreamChannel        ( RmPlugInData? ) >
   <!ELEMENT RmShaderConstant       ( RmPlugInData? ) >
   <!ELEMENT RmSampler              ( RmPlugInData? ) >
   <!ELEMENT RmState                ( RmPlugInData? ) >
   <!ELEMENT RmDynamicVariableValue ( RmPlugInData? ) >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 
   
   <!ATTLIST RmOpenGLESEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmGLESPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
      COMPILER_FLAGS                CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  
   
   <!ATTLIST RmGLESShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
      VERTEX_TEXTURE                ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
     API                            CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
      ATTRIBUTE_NAME                CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIENTATION                   CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
      WIDTH_RATIO                   CDATA #REQUIRED
      HEIGHT_RATIO                  CDATA #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      ORIGIN                        CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmPlugInData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PLUGIN_GUID                   CDATA #REQUIRED
   >

   <!ATTLIST RmClipboardNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTessellationNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      MIN_TESSELLATION_LEVEL        CDATA #REQUIRED
      MAX_TESSELLATION_LEVEL        CDATA #REQUIRED
   >
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Effect Workspace" API="" ACTIVE_EFFECT="Effect Workspace.Textured Phong" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.71">
  <RmRegistryBranch NAME="RM_REGISTRY" API="" XML_VERSION="RenderMonkey 1.71">
   <RmRegistryBranch NAME="RM_LOCAL" API="" XML_VERSION="RenderMonkey 1.71">
    <RmRegistryBranch NAME="RM_PLUGIN" API="" XML_VERSION="RenderMonkey 1.71"><RmTextDataBlock TYPE="TEXT"><![CDATA[
<DockingPaneLayouts><Application_Layout><Pane-1><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Artist Editor</Title><ID>1001</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>64</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>64</LastHolder></Pane-1><Pane-2><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>1</Horiz><Pane-1>3</Pane-1><Pane-2>4</Pane-2><Pane-3>5</Pane-3><Pane-4>6</Pane-4><Pane-5>7</Pane-5><Pane-6>8</Pane-6><Pane-7>9</Pane-7><Pane-8>10</Pane-8><Pane-9>11</Pane-9><Pane-10>12</Pane-10><Pane-11>13</Pane-11><Pane-12>14</Pane-12><Pane-13>15</Pane-13><Pane-14>16</Pane-14><Pane-15>17</Pane-15><Pane-16>18</Pane-16><Pane-17>19</Pane-17><Pane-18>20</Pane-18><Pane-19>21</Pane-19><Pane-20>22</Pane-20><Pane-21>23</Pane-21><Pane-22>24</Pane-22><Pane-23>25</Pane-23><Pane-24>26</Pane-24><Pane-25>27</Pane-25><Pane-26>28</Pane-26><Pane-27>29</Pane-27><Pane-28>30</Pane-28><Pane-29>31</Pane-29><Pane-30>32</Pane-30><Pane-31>33</Pane-31><Pane-32>34</Pane-32><Pane-33>35</Pane-33><Pane-34>36</Pane-34><Pane-35>37</Pane-35><Pane-36>38</Pane-36><Pane-37>39</Pane-37><Pane-38>40</Pane-38><Pane-39>41</Pane-39><Pane-40>42</Pane-40><Pane-41>43</Pane-41><Pane-42>44</Pane-42><Pane-43>45</Pane-43><Pane-44>46</Pane-44><Pane-45>47</Pane-45><Pane-46>48</Pane-46><Pane-47>49</Pane-47><Pane-48>50</Pane-48><Pane-49>51</Pane-49><Pane-50>52</Pane-50><Pane-51>53</Pane-51><Pane-52>54</Pane-52><Pane-53>55</Pane-53><Pane-54>56</Pane-54><Pane-55>57</Pane-55><Pane-56>58</Pane-56><Pane-57>59</Pane-57><Panes>57</Panes></Pane-2><Pane-3><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-3><Pane-4><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-4><Pane-5><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-5><Pane-6><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-6><Pane-7><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-7><Pane-8><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-8><Pane-9><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-9><Pane-10><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-10><Pane-11><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-11><Pane-12><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-12><Pane-13><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-13><Pane-14><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-14><Pane-15><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-15><Pane-16><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-16><Pane-17><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-17><Pane-18><Type>1</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-18><Pane-19><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-19><Pane-20><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-20><Pane-21><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-21><Pane-22><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-22><Pane-23><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-23><Pane-24><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-24><Pane-25><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-25><Pane-26><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-26><Pane-27><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-27><Pane-28><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-28><Pane-29><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-29><Pane-30><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-30><Pane-31><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-31><Pane-32><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-32><Pane-33><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-33><Pane-34><Type>1</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-34><Pane-35><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-35><Pane-36><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-36><Pane-37><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-37><Pane-38><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-38><Pane-39><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-39><Pane-40><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-40><Pane-41><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-41><Pane-42><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-42><Pane-43><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-43><Pane-44><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-44><Pane-45><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-45><Pane-46><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-46><Pane-47><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-47><Pane-48><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-48><Pane-49><Type>1</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-49><Pane-50><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-50><Pane-51><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-51><Pane-52><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-52><Pane-53><Type>1</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-53><Pane-54><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-54><Pane-55><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-55><Pane-56><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-56><Pane-57><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-57><Pane-58><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-58><Pane-59><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>0</Horiz><Pane-1>60</Pane-1><Pane-2>65</Pane-2><Panes>2</Panes></Pane-59><Pane-60><Type>2</Type><DockingCX>0</DockingCX><DockingCY>706</DockingCY><Horiz>1</Horiz><Pane-1>61</Pane-1><Pane-2>63</Pane-2><Pane-3>64</Pane-3><Panes>3</Panes></Pane-60><Pane-61><Type>1</Type><DockingCX>298</DockingCX><DockingCY>250</DockingCY><Selected>62</Selected><Panes>1</Panes><Pane-1>62</Pane-1></Pane-61><Pane-62><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Workspace</Title><ID>1000</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>61</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>61</LastHolder></Pane-62><Pane-63><Type>4</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY></Pane-63><Pane-64><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-64><Pane-65><Type>1</Type><DockingCX>250</DockingCX><DockingCY>222</DockingCY><Selected>66</Selected><Panes>1</Panes><Pane-1>66</Pane-1></Pane-65><Pane-66><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Output</Title><ID>1002</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>65</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>65</LastHolder></Pane-66><Pane-67><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>scale</Title><ID>1100</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>58</DockingHolder><FloatingHolder>70</FloatingHolder><LastHolder>70</LastHolder></Pane-67><Pane-68><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>69</TopContaner><WindowRectTopPos>30</WindowRectTopPos><WindowRectBottomPos>208</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>347</WindowRectRightPos></Pane-68><Pane-69><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>70</Pane-1><Panes>1</Panes></Pane-69><Pane-70><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-70><Pane-71><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>fvLightPosition</Title><ID>1101</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>57</DockingHolder><FloatingHolder>74</FloatingHolder><LastHolder>74</LastHolder></Pane-71><Pane-72><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>73</TopContaner><WindowRectTopPos>30</WindowRectTopPos><WindowRectBottomPos>243</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>357</WindowRectRightPos></Pane-72><Pane-73><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>74</Pane-1><Panes>1</Panes></Pane-73><Pane-74><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-74><Pane-75><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1102</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>56</DockingHolder><FloatingHolder>78</FloatingHolder><LastHolder>78</LastHolder></Pane-75><Pane-76><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>77</TopContaner><WindowRectTopPos>30</WindowRectTopPos><WindowRectBottomPos>222</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>390</WindowRectRightPos></Pane-76><Pane-77><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>78</Pane-1><Panes>1</Panes></Pane-77><Pane-78><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-78><Pane-79><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1103</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>55</DockingHolder><FloatingHolder>82</FloatingHolder><LastHolder>82</LastHolder></Pane-79><Pane-80><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>81</TopContaner><WindowRectTopPos>30</WindowRectTopPos><WindowRectBottomPos>222</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>390</WindowRectRightPos></Pane-80><Pane-81><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>82</Pane-1><Panes>1</Panes></Pane-81><Pane-82><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-82><Pane-83><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>fSpecularPower</Title><ID>1104</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>54</DockingHolder><FloatingHolder>86</FloatingHolder><LastHolder>86</LastHolder></Pane-83><Pane-84><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>85</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-84><Pane-85><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>86</Pane-1><Panes>1</Panes></Pane-85><Pane-86><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-86><Pane-87><Type>0</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Title>fvSpecular</Title><ID>1105</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>53</DockingHolder><FloatingHolder>90</FloatingHolder><LastHolder>90</LastHolder></Pane-87><Pane-88><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>89</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>333</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>201</WindowRectRightPos></Pane-88><Pane-89><Type>2</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Horiz>1</Horiz><Pane-1>90</Pane-1><Panes>1</Panes></Pane-89><Pane-90><Type>1</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-90><Pane-91><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>lightIntensity</Title><ID>1106</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>52</DockingHolder><FloatingHolder>94</FloatingHolder><LastHolder>94</LastHolder></Pane-91><Pane-92><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>93</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>166</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>428</WindowRectRightPos></Pane-92><Pane-93><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>94</Pane-1><Panes>1</Panes></Pane-93><Pane-94><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-94><Pane-95><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1107</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>51</DockingHolder><FloatingHolder>98</FloatingHolder><LastHolder>98</LastHolder></Pane-95><Pane-96><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>97</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-96><Pane-97><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>98</Pane-1><Panes>1</Panes></Pane-97><Pane-98><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-98><Pane-99><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1108</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>50</DockingHolder><FloatingHolder>102</FloatingHolder><LastHolder>102</LastHolder></Pane-99><Pane-100><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>101</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-100><Pane-101><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>102</Pane-1><Panes>1</Panes></Pane-101><Pane-102><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-102><Pane-103><Type>0</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Title>myColor</Title><ID>1109</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>49</DockingHolder><FloatingHolder>106</FloatingHolder><LastHolder>106</LastHolder></Pane-103><Pane-104><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>105</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>332</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>201</WindowRectRightPos></Pane-104><Pane-105><Type>2</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Horiz>1</Horiz><Pane-1>106</Pane-1><Panes>1</Panes></Pane-105><Pane-106><Type>1</Type><DockingCX>201</DockingCX><DockingCY>310</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-106><Pane-107><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>freq</Title><ID>1110</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>48</DockingHolder><FloatingHolder>110</FloatingHolder><LastHolder>110</LastHolder></Pane-107><Pane-108><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>109</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-108><Pane-109><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>110</Pane-1><Panes>1</Panes></Pane-109><Pane-110><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-110><Pane-111><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>freq</Title><ID>1111</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>47</DockingHolder><FloatingHolder>114</FloatingHolder><LastHolder>114</LastHolder></Pane-111><Pane-112><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>113</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>200</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-112><Pane-113><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>114</Pane-1><Panes>1</Panes></Pane-113><Pane-114><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-114><Pane-115><Type>0</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Title>speed</Title><ID>1112</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>46</DockingHolder><FloatingHolder>118</FloatingHolder><LastHolder>118</LastHolder></Pane-115><Pane-116><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>117</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>132</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-116><Pane-117><Type>2</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Horiz>1</Horiz><Pane-1>118</Pane-1><Panes>1</Panes></Pane-117><Pane-118><Type>1</Type><DockingCX>435</DockingCX><DockingCY>110</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-118><Pane-119><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1113</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>45</DockingHolder><FloatingHolder>122</FloatingHolder><LastHolder>122</LastHolder></Pane-119><Pane-120><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>121</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-120><Pane-121><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>122</Pane-1><Panes>1</Panes></Pane-121><Pane-122><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-122><Pane-123><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>T0</Title><ID>1114</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>44</DockingHolder><FloatingHolder>126</FloatingHolder><LastHolder>126</LastHolder></Pane-123><Pane-124><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>125</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>200</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-124><Pane-125><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>126</Pane-1><Panes>1</Panes></Pane-125><Pane-126><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-126><Pane-127><Type>0</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Title>scale</Title><ID>1115</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>43</DockingHolder><FloatingHolder>130</FloatingHolder><LastHolder>130</LastHolder></Pane-127><Pane-128><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>129</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>214</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-128><Pane-129><Type>2</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Horiz>1</Horiz><Pane-1>130</Pane-1><Panes>1</Panes></Pane-129><Pane-130><Type>1</Type><DockingCX>382</DockingCX><DockingCY>192</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-130><Pane-131><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>texscale</Title><ID>1116</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>42</DockingHolder><FloatingHolder>134</FloatingHolder><LastHolder>134</LastHolder></Pane-131><Pane-132><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>133</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>200</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-132><Pane-133><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>134</Pane-1><Panes>1</Panes></Pane-133><Pane-134><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-134><Pane-135><Type>0</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Title>texscale</Title><ID>1117</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>41</DockingHolder><FloatingHolder>138</FloatingHolder><LastHolder>138</LastHolder></Pane-135><Pane-136><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>137</TopContaner><WindowRectTopPos>22</WindowRectTopPos><WindowRectBottomPos>200</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-136><Pane-137><Type>2</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Horiz>1</Horiz><Pane-1>138</Pane-1><Panes>1</Panes></Pane-137><Pane-138><Type>1</Type><DockingCX>339</DockingCX><DockingCY>178</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-138><Pane-139><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1118</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>40</DockingHolder><FloatingHolder>142</FloatingHolder><LastHolder>142</LastHolder></Pane-139><Pane-140><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>141</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-140><Pane-141><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>142</Pane-1><Panes>1</Panes></Pane-141><Pane-142><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-142><Pane-143><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>bumpheight</Title><ID>1119</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>39</DockingHolder><FloatingHolder>146</FloatingHolder><LastHolder>146</LastHolder></Pane-143><Pane-144><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>145</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-144><Pane-145><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>146</Pane-1><Panes>1</Panes></Pane-145><Pane-146><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-146><Pane-147><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>bumpHeight</Title><ID>1120</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>38</DockingHolder><FloatingHolder>150</FloatingHolder><LastHolder>150</LastHolder></Pane-147><Pane-148><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>149</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-148><Pane-149><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>150</Pane-1><Panes>1</Panes></Pane-149><Pane-150><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-150><Pane-151><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>bumpDensity</Title><ID>1121</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>37</DockingHolder><FloatingHolder>154</FloatingHolder><LastHolder>154</LastHolder></Pane-151><Pane-152><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>153</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-152><Pane-153><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>154</Pane-1><Panes>1</Panes></Pane-153><Pane-154><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-154><Pane-155><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>smoothscale</Title><ID>1122</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>36</DockingHolder><FloatingHolder>158</FloatingHolder><LastHolder>158</LastHolder></Pane-155><Pane-156><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>157</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-156><Pane-157><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>158</Pane-1><Panes>1</Panes></Pane-157><Pane-158><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-158><Pane-159><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>wingspeed</Title><ID>1123</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>35</DockingHolder><FloatingHolder>162</FloatingHolder><LastHolder>162</LastHolder></Pane-159><Pane-160><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>161</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-160><Pane-161><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>162</Pane-1><Panes>1</Panes></Pane-161><Pane-162><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-162><Pane-163><Type>0</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Title>fvEyePosition</Title><ID>1124</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>34</DockingHolder><FloatingHolder>166</FloatingHolder><LastHolder>166</LastHolder></Pane-163><Pane-164><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>165</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>202</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-164><Pane-165><Type>2</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Horiz>1</Horiz><Pane-1>166</Pane-1><Panes>1</Panes></Pane-165><Pane-166><Type>1</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-166><Pane-167><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1125</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>33</DockingHolder><FloatingHolder>170</FloatingHolder><LastHolder>170</LastHolder></Pane-167><Pane-168><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>169</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-168><Pane-169><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>170</Pane-1><Panes>1</Panes></Pane-169><Pane-170><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-170><Pane-171><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1126</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>32</DockingHolder><FloatingHolder>174</FloatingHolder><LastHolder>174</LastHolder></Pane-171><Pane-172><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>173</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-172><Pane-173><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>174</Pane-1><Panes>1</Panes></Pane-173><Pane-174><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-174><Pane-175><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1127</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>31</DockingHolder><FloatingHolder>178</FloatingHolder><LastHolder>178</LastHolder></Pane-175><Pane-176><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>177</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-176><Pane-177><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>178</Pane-1><Panes>1</Panes></Pane-177><Pane-178><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-178><Pane-179><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1128</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>30</DockingHolder><FloatingHolder>182</FloatingHolder><LastHolder>182</LastHolder></Pane-179><Pane-180><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>181</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-180><Pane-181><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>182</Pane-1><Panes>1</Panes></Pane-181><Pane-182><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-182><Pane-183><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1129</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>29</DockingHolder><FloatingHolder>186</FloatingHolder><LastHolder>186</LastHolder></Pane-183><Pane-184><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>185</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-184><Pane-185><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>186</Pane-1><Panes>1</Panes></Pane-185><Pane-186><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-186><Pane-187><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>lifespan</Title><ID>1130</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>28</DockingHolder><FloatingHolder>190</FloatingHolder><LastHolder>190</LastHolder></Pane-187><Pane-188><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>189</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-188><Pane-189><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>190</Pane-1><Panes>1</Panes></Pane-189><Pane-190><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-190><Pane-191><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>speed</Title><ID>1131</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>27</DockingHolder><FloatingHolder>194</FloatingHolder><LastHolder>194</LastHolder></Pane-191><Pane-192><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>193</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-192><Pane-193><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>194</Pane-1><Panes>1</Panes></Pane-193><Pane-194><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-194><Pane-195><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>spread</Title><ID>1132</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>26</DockingHolder><FloatingHolder>198</FloatingHolder><LastHolder>198</LastHolder></Pane-195><Pane-196><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>197</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-196><Pane-197><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>198</Pane-1><Panes>1</Panes></Pane-197><Pane-198><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-198><Pane-199><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>freq</Title><ID>1133</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>25</DockingHolder><FloatingHolder>202</FloatingHolder><LastHolder>202</LastHolder></Pane-199><Pane-200><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>201</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-200><Pane-201><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>202</Pane-1><Panes>1</Panes></Pane-201><Pane-202><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-202><Pane-203><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1134</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>24</DockingHolder><FloatingHolder>206</FloatingHolder><LastHolder>206</LastHolder></Pane-203><Pane-204><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>205</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-204><Pane-205><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>206</Pane-1><Panes>1</Panes></Pane-205><Pane-206><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-206><Pane-207><Type>0</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Title>glowcolor</Title><ID>1135</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>23</DockingHolder><FloatingHolder>210</FloatingHolder><LastHolder>210</LastHolder></Pane-207><Pane-208><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>209</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>334</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>201</WindowRectRightPos></Pane-208><Pane-209><Type>2</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Horiz>1</Horiz><Pane-1>210</Pane-1><Panes>1</Panes></Pane-209><Pane-210><Type>1</Type><DockingCX>201</DockingCX><DockingCY>311</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-210><Pane-211><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>intensity</Title><ID>1136</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>22</DockingHolder><FloatingHolder>214</FloatingHolder><LastHolder>214</LastHolder></Pane-211><Pane-212><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>213</TopContaner><WindowRectTopPos>31</WindowRectTopPos><WindowRectBottomPos>142</WindowRectBottomPos><WindowRectLeftPos>968</WindowRectLeftPos><WindowRectRightPos>1403</WindowRectRightPos></Pane-212><Pane-213><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>214</Pane-1><Panes>1</Panes></Pane-213><Pane-214><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-214><Pane-215><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>height</Title><ID>1137</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>21</DockingHolder><FloatingHolder>218</FloatingHolder><LastHolder>218</LastHolder></Pane-215><Pane-216><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>217</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-216><Pane-217><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>218</Pane-1><Panes>1</Panes></Pane-217><Pane-218><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-218><Pane-219><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>shape</Title><ID>1138</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>20</DockingHolder><FloatingHolder>222</FloatingHolder><LastHolder>222</LastHolder></Pane-219><Pane-220><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>221</TopContaner><WindowRectTopPos>31</WindowRectTopPos><WindowRectBottomPos>142</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>443</WindowRectRightPos></Pane-220><Pane-221><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>222</Pane-1><Panes>1</Panes></Pane-221><Pane-222><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-222><Pane-223><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>size</Title><ID>1139</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>19</DockingHolder><FloatingHolder>226</FloatingHolder><LastHolder>226</LastHolder></Pane-223><Pane-224><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>225</TopContaner><WindowRectTopPos>31</WindowRectTopPos><WindowRectBottomPos>142</WindowRectBottomPos><WindowRectLeftPos>8</WindowRectLeftPos><WindowRectRightPos>443</WindowRectRightPos></Pane-224><Pane-225><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>226</Pane-1><Panes>1</Panes></Pane-225><Pane-226><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-226><Pane-227><Type>0</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Title>position</Title><ID>1140</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>18</DockingHolder><FloatingHolder>230</FloatingHolder><LastHolder>230</LastHolder></Pane-227><Pane-228><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>229</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>202</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>339</WindowRectRightPos></Pane-228><Pane-229><Type>2</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Horiz>1</Horiz><Pane-1>230</Pane-1><Panes>1</Panes></Pane-229><Pane-230><Type>1</Type><DockingCX>339</DockingCX><DockingCY>179</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-230><Pane-231><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>position</Title><ID>1141</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>17</DockingHolder><FloatingHolder>234</FloatingHolder><LastHolder>234</LastHolder></Pane-231><Pane-232><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>233</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-232><Pane-233><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>234</Pane-1><Panes>1</Panes></Pane-233><Pane-234><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-234><Pane-235><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>position</Title><ID>1142</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>16</DockingHolder><FloatingHolder>238</FloatingHolder><LastHolder>238</LastHolder></Pane-235><Pane-236><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>237</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-236><Pane-237><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>238</Pane-1><Panes>1</Panes></Pane-237><Pane-238><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-238><Pane-239><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>position</Title><ID>1143</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>15</DockingHolder><FloatingHolder>242</FloatingHolder><LastHolder>242</LastHolder></Pane-239><Pane-240><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>241</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-240><Pane-241><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>242</Pane-1><Panes>1</Panes></Pane-241><Pane-242><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-242><Pane-243><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1144</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>14</DockingHolder><FloatingHolder>246</FloatingHolder><LastHolder>246</LastHolder></Pane-243><Pane-244><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>245</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-244><Pane-245><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>246</Pane-1><Panes>1</Panes></Pane-245><Pane-246><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-246><Pane-247><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1145</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>13</DockingHolder><FloatingHolder>250</FloatingHolder><LastHolder>250</LastHolder></Pane-247><Pane-248><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>249</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-248><Pane-249><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>250</Pane-1><Panes>1</Panes></Pane-249><Pane-250><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-250><Pane-251><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1146</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>12</DockingHolder><FloatingHolder>254</FloatingHolder><LastHolder>254</LastHolder></Pane-251><Pane-252><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>253</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-252><Pane-253><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>254</Pane-1><Panes>1</Panes></Pane-253><Pane-254><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-254><Pane-255><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1147</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>11</DockingHolder><FloatingHolder>258</FloatingHolder><LastHolder>258</LastHolder></Pane-255><Pane-256><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>257</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-256><Pane-257><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>258</Pane-1><Panes>1</Panes></Pane-257><Pane-258><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-258><Pane-259><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>scale</Title><ID>1148</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>10</DockingHolder><FloatingHolder>262</FloatingHolder><LastHolder>262</LastHolder></Pane-259><Pane-260><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>261</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-260><Pane-261><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>262</Pane-1><Panes>1</Panes></Pane-261><Pane-262><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-262><Pane-263><Type>0</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Title>position</Title><ID>1149</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>9</DockingHolder><FloatingHolder>266</FloatingHolder><LastHolder>266</LastHolder></Pane-263><Pane-264><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>265</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>216</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>382</WindowRectRightPos></Pane-264><Pane-265><Type>2</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Horiz>1</Horiz><Pane-1>266</Pane-1><Panes>1</Panes></Pane-265><Pane-266><Type>1</Type><DockingCX>382</DockingCX><DockingCY>193</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-266><Pane-267><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>height</Title><ID>1150</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>8</DockingHolder><FloatingHolder>270</FloatingHolder><LastHolder>270</LastHolder></Pane-267><Pane-268><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>269</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-268><Pane-269><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>270</Pane-1><Panes>1</Panes></Pane-269><Pane-270><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-270><Pane-271><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>spread</Title><ID>1151</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>7</DockingHolder><FloatingHolder>274</FloatingHolder><LastHolder>274</LastHolder></Pane-271><Pane-272><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>273</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-272><Pane-273><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>274</Pane-1><Panes>1</Panes></Pane-273><Pane-274><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-274><Pane-275><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>speed</Title><ID>1152</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>6</DockingHolder><FloatingHolder>278</FloatingHolder><LastHolder>278</LastHolder></Pane-275><Pane-276><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>277</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-276><Pane-277><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>278</Pane-1><Panes>1</Panes></Pane-277><Pane-278><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-278><Pane-279><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>size</Title><ID>1153</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>5</DockingHolder><FloatingHolder>282</FloatingHolder><LastHolder>282</LastHolder></Pane-279><Pane-280><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>281</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-280><Pane-281><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>282</Pane-1><Panes>1</Panes></Pane-281><Pane-282><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-282><Pane-283><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>freq</Title><ID>1154</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>4</DockingHolder><FloatingHolder>286</FloatingHolder><LastHolder>286</LastHolder></Pane-283><Pane-284><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>285</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-284><Pane-285><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>286</Pane-1><Panes>1</Panes></Pane-285><Pane-286><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-286><Pane-287><Type>0</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Title>shape</Title><ID>1155</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>3</DockingHolder><FloatingHolder>290</FloatingHolder><LastHolder>290</LastHolder></Pane-287><Pane-288><Type>3</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><TopContaner>289</TopContaner><WindowRectTopPos>23</WindowRectTopPos><WindowRectBottomPos>134</WindowRectBottomPos><WindowRectLeftPos>0</WindowRectLeftPos><WindowRectRightPos>435</WindowRectRightPos></Pane-288><Pane-289><Type>2</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Horiz>1</Horiz><Pane-1>290</Pane-1><Panes>1</Panes></Pane-289><Pane-290><Type>1</Type><DockingCX>435</DockingCX><DockingCY>111</DockingCY><Selected>0</Selected><Panes>0</Panes></Pane-290><Summary><TopContainer>2</TopContainer><Client>63</Client><Panes>290</Panes></Summary></Application_Layout></DockingPaneLayouts>
]]></RmTextDataBlock>
     <RmRegistryBranch NAME="RmDynamicVariableEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.back.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1100" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fvLightPosition" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1101" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.freq" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1111" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmStreamEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="Effect Workspace.Textured Phong.Stream Mapping" API="" XML_VERSION="RenderMonkey 1.71">
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="266" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="122" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="641" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="280" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmVectorEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.right.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1102" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.back.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1103" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.roof.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1107" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.firewood.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1108" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.table.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1113" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.kettle.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1118" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.snake1.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1125" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.snake2.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1126" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.snake3.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1127" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorchbase.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1128" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1129" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.position" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1141" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.righttorch.position" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1142" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.lefttorch.position" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1143" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.chest.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1144" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.shroom1.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1146" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.shroom2.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1147" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.shroom3.scale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1148" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.position" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1149" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderStateBlockEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="772" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="40" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="735" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="545" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="648" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmScalarEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.lightIntensity" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1106" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.speed" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1112" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.floor.bumpHeight" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1119" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.kettle.bumpHeight" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1120" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.kettle.bumpDensity" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1121" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.flying.smoothscale" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1122" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.flying.wingspeed" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1123" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.lifespan" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1130" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.speed" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1131" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.spread" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1132" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.freq" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1133" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.height" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1137" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.shape" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1138" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.backtorch.size" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1139" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.height" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1150" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.spread" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1151" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.speed" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1152" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.size" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1153" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.freq" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1154" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fog.shape" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1155" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmColorEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.fvSpecular" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1105" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong.firewood.myColor" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1109" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="LargeSize" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmPreviewDx9Window" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLESWindow" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLPreview" API="" XML_VERSION="RenderMonkey 1.71"/>
     <RmRegistryBranch NAME="RmPreviewGLWindow" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EffectPlacementRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="776" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="683" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmLightEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="NoteEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderableTextureEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderTargetEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmShaderEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.71"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Vertex Program]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
lefttorchbase]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="3" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="775" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="650" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="802" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureObjectEditor" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.71">
       <RmRegistryBranch NAME="Effect Workspace.Textured Phong" API="" XML_VERSION="RenderMonkey 1.71">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="50" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="50" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1385" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="492" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTessellationNodeEditorDlg" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureGenerator" API="" XML_VERSION="RenderMonkey 1.71">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.71"/>
     </RmRegistryBranch>
    </RmRegistryBranch>
    <RmRegistryBranch NAME="WORKSPACE" API="" XML_VERSION="RenderMonkey 1.71">
     <RmStringVariable NAME="LAST_SAVE" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
12/11/2015 10:59:49]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.82 (build 322)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.71]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
E:\uni\year 3\Advanced Graphics\ACW\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmOpenGLEffect NAME="Textured Phong" API="OpenGL" ACTIVE_CAMERA="">
   <RmDynamicVariable NAME="fvLightPosition" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-100.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE">
    <RmDynamicVariableValueContainer>
     <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
     <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
     <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="0.000000"/>
    </RmDynamicVariableValueContainer>
   </RmDynamicVariable>
   <RmFloatVariable NAME="lightIntensity" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.500000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="fSpecularPower" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="25.000000" MIN="1.000000" MAX="100.000000" CLAMP="TRUE"/>
   <RmDynamicVariable NAME="freq" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="2" COLUMNS="1" FIXED_SIZE="TRUE" MIN="0.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE">
    <RmDynamicVariableValueContainer>
     <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="1.000000"/>
     <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="1.000000"/>
    </RmDynamicVariableValueContainer>
   </RmDynamicVariable>
   <RmFloatVariable NAME="speed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.500000" MIN="0.000000" MAX="10.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="time" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="Time0_X" VALUE="3.579262" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
   <RmMatrixVariable NAME="viewInver" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewInverse" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
   <RmMatrixVariable NAME="matView" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="View" VALUE_0="1.000000" VALUE_1="0.000000" VALUE_2="0.000000" VALUE_3="0.000000" VALUE_4="0.000000" VALUE_5="1.000000" VALUE_6="0.000000" VALUE_7="0.000000" VALUE_8="0.000000" VALUE_9="0.000000" VALUE_10="1.000000" VALUE_11="-200.000000" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
   <RmVectorVariable NAME="fvEyePosition" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewPosition" VALUE_0="0.000000" VALUE_1="0.000000" VALUE_2="200.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmColorVariable NAME="fvAmbient" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.368627" VALUE_1="0.368421" VALUE_2="0.368421" VALUE_3="1.000000"/>
   <RmColorVariable NAME="fvDiffuse" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.886275" VALUE_1="0.885003" VALUE_2="0.885003" VALUE_3="1.000000"/>
   <RmColorVariable NAME="fvSpecular" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.043137" VALUE_1="0.044311" VALUE_2="0.044311" VALUE_3="1.000000"/>
   <Rm2DTextureVariable NAME="Fieldstone" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Rainbow.tga" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="bark" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="4.bark-texture1.jpg" ORIGIN="0"/>
   <Rm2DTextureVariable NAME="base" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" FILE_NAME="Tiles.dds" ORIGIN="0"/>
   <RmStreamMap NAME="Stream Mapping" API="">
    <RmStream NAME="Stream" API="" STRIDE="56">
     <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Vertex"/>
     <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_TexCoord0"/>
     <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Normal"/>
     <RmStreamChannel NAME="Tangent_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="6" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Tangent"/>
     <RmStreamChannel NAME="Binormal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="7" USAGE_INDEX="0" ATTRIBUTE_NAME="rm_Binormal"/>
    </RmStream>
   </RmStreamMap>
   <RmModelData NAME="firewood" API="" FILE_NAME=".\Stock.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Teapot" API="" FILE_NAME=".\Teapot.3ds" ORIENTATION="0"/>
   <RmModelData NAME="table" API="" FILE_NAME=".\Table 3.3DS" ORIENTATION="0"/>
   <RmModelData NAME="Sphere" API="" FILE_NAME=".\Sphere.x" ORIENTATION="0"/>
   <RmModelData NAME="Cube" API="" FILE_NAME=".\Cube.x" ORIENTATION="0"/>
   <RmModelData NAME="QuadArray" API="" FILE_NAME=".\QuadArray.3ds" ORIENTATION="0"/>
   <RmModelData NAME="chest" API="" FILE_NAME=".\chest.obj" ORIENTATION="0"/>
   <RmModelData NAME="shroom" API="" FILE_NAME=".\boletus.3ds" ORIENTATION="0"/>
   <RmModelData NAME="Model" API="" FILE_NAME=".\ScreenAlignedQuad.3ds" ORIENTATION="0"/>
   <RmModelData NAME="ScreenAlignedQuad" API="" FILE_NAME=".\ScreenAlignedQuad.3ds" ORIENTATION="0"/>
   <RmGLPass NAME="flying" API="OpenGL" PASS_INDEX="8" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   //Pos.y += 140.0;
   Pos *= scale;
   Pos.y += 50.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   //*/
   if (Pos.y > 49.0 && Pos.y < 51.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   //Pos.xz += 50.0 * cos(time);
   Pos.x += (60.0 * cos((-PI/2.0) * (time)));
   Pos.z += (60.0 * sin((-PI/2.0) * (time)));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.250000" VALUE_1="0.250000" VALUE_2="0.250000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="smoothscale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="wingspeed" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="table" API="OpenGL" PASS_INDEX="6" ENABLED="TRUE">
    <RmModelReference NAME="table" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;

uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float lightIntensity;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

varying vec3 eyePos;

void main( void )
{
   //gl_FragColor = texture2D(baseMap, Texcoord);
   
   vec3  fvLightDirection = normalize( fvLightPosition - gl_FragCoord  );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( eyePos - gl_FragCoord );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor ; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

varying vec3 eyePos;

uniform mat4 matView;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.y -= 75.0;
   Pos.z -= 75.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   eyePos = fvEyePosition.xyz;
   
   Normal         = vec3(rot * vec4(gl_NormalMatrix * gl_Normal, 1));
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.050000" VALUE_1="0.050000" VALUE_2="0.050000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bark" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snake1" API="OpenGL" PASS_INDEX="9" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   
   Pos *= scale;
   Pos.y -= 70.0;
   //Pos.z -= 30.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   
   if (Pos.y > -1.0 && Pos.y < 1.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   
   //Pos.x += 50.0 * cos(time);
   Pos.x += (40.0 * cos((PI) * time));
   Pos.z += (40.0 * sin((PI) * time));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="floor" API="OpenGL" PASS_INDEX="4" ENABLED="TRUE">
    <RmModelReference NAME="ScreenAlignedQuad" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float lightIntensity;
uniform mat4 viewInver;
uniform float bumpHeight;

uniform sampler2D heightMap;
uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

varying mat4 rot;

void main( void )
{
   float height = texture2D(heightMap, Texcoord).r;
   float dFx = dFdx(height);
   float dFy = dFdy(height);
   
   vec3 N = normalize(vec3(-(bumpHeight * dFx), -(bumpHeight * dFy), 1.0));
   N = mat3(rot) * N;

   //vec3 N = normalize(Normal);

   vec3  fvLightDirection = normalize( LightDirection);
   vec3  fvNormal         = N;
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor ; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular) / 3,0;
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;
uniform mat4 matView;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

varying mat4 rot;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.y -= 75.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec3 fvObjectPosition = vec3(Pos);
   
   vec3 lightPos = vec3(matView * vec4(fvLightPosition, 1.0));
   
   ViewDirection  = vec3(fvEyePosition) - fvObjectPosition;
   LightDirection = lightPos - fvObjectPosition;
   LightDirection = vec3(0, 1, 0);
   Normal         = mat3(rot) * gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="100.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="bumpHeight" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="0.000000" MAX="10.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rockwall_height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall_height.bmp" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="rockwall" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="rockwall.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="heightMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwall_height" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rockwall" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="heightMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bumpHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snake2" API="OpenGL" PASS_INDEX="10" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   
   Pos *= scale;
   Pos.y -= 70.0;
   //Pos.xz -= 5.0;
   //Pos.z -= 30.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   
   if (Pos.y > -1.0 && Pos.y < 1.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   
   //Pos.x += 50.0 * cos(time);
   Pos.x += (40.0 * cos((PI) * (time - 0.05)));
   Pos.z += (40.0 * sin((PI) * (time - 0.05)));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snake3" API="OpenGL" PASS_INDEX="11" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   
   Pos *= scale;
   Pos.y -= 70.0;
   //Pos.xz -= 5.0;
   //Pos.z -= 30.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   
   if (Pos.y > -1.0 && Pos.y < 1.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   
   //Pos.x += 50.0 * cos(time);
   Pos.x += (40.0 * cos((PI) * (time - 0.1)));
   Pos.z += (40.0 * sin((PI) * (time - 0.1)));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snake4" API="OpenGL" PASS_INDEX="12" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   
   Pos *= scale;
   Pos.y -= 70.0;
   //Pos.xz -= 5.0;
   //Pos.z -= 30.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   
   if (Pos.y > -1.0 && Pos.y < 1.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   
   //Pos.x += 50.0 * cos(time);
   Pos.x += (40.0 * cos((PI) * (time - 0.15)));
   Pos.z += (40.0 * sin((PI) * (time - 0.15)));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="snake5" API="OpenGL" PASS_INDEX="13" ENABLED="TRUE">
    <RmModelReference NAME="Sphere" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float smoothscale;
uniform float time;
uniform float wingspeed;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   
   Pos *= scale;
   Pos.y -= 70.0;
   //Pos.xz -= 5.0;
   //Pos.z -= 30.0;
   /*
   float softInterval(float a, float b, float c, float d, float x)
   {
      return smoothstep(a, b, x) - smoothstep(c, d , x);
   }
   
   if (Pos.y > -1.0 && Pos.y < 1.0 && Pos.x > -5.0 && Pos.x < 5.0)
   {
      //Pos.z += scale * 10.0;
      //float s = scale * softIntveral(-10.0, -5.0 , 5.0, 10.0 , Pos.x);
      float s = smoothscale * (smoothstep(-10.0, -5.0, Pos.x) - smoothstep(5.0, 10.0 , Pos.x));
      Pos.xyz += s * normalize(gl_Normal);
      Pos.y += 5.0 * sin(time * wingspeed);
   }
   //*/ 
   
   //Pos.x += 50.0 * cos(time);
   Pos.x += (40.0 * cos((PI) * (time - 0.2)));
   Pos.z += (40.0 * sin((PI) * (time - 0.2)));
             
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="smoothscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="15.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="wingspeed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Fieldstone" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="backtorchbase" API="OpenGL" PASS_INDEX="14" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;

   Pos.z -= 98.0;
   Pos.y += 25.0; 
            
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   //vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   //ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   //LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   //Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.025000" VALUE_1="0.200000" VALUE_2="0.025000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bark" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="left" API="OpenGL" PASS_INDEX="2" ENABLED="TRUE">
    <RmModelReference NAME="ScreenAlignedQuad" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 Normal;
varying vec3 fvObjectPosition;

void main( void )
{
   //gl_FragColor = texture2D( baseMap, Texcoord );
   //*
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = max(dot( fvNormal, fvLightDirection ), 0.0); 
   
   float dist = length(LightDirection);
   float att = (1.0 / (0.1 * dist));
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   if (fNDotL > 0.0)
   {
   
      vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
      vec3  fvViewDirection  = normalize( ViewDirection );
      float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor * 0.4; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor * att; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) ) * att;
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );// / 5.0;
   }
   else
   {
       gl_FragColor = fvAmbient * fvBaseColor * 0.4; 
   }
   
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;

uniform mat4 matView;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 fvObjectPosition;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(-PI/2.0), 0.0, sin(-PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(-PI/2.0), 0.0, cos(-PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Ry;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.x -= 100.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   fvObjectPosition = vec3(gl_ModelViewMatrix * Pos);
   
   ViewDirection  = vec3(fvEyePosition) - fvObjectPosition.xyz;
   
   lightPos = vec3(matView * vec4(-95.0, 40.0, 0, 1));
   LightDirection = lightPos - fvObjectPosition.xyz;
   Normal = vec3(rot * vec4(gl_NormalMatrix * gl_Normal, 1));
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="75.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="base" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="matView" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="backtorch" API="OpenGL" PASS_INDEX="15" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;
uniform float shape;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;

void main( void )
{
   /*
   float x = Texcoord.x;
   float y = Texcoord.y;
   float range = 4.0 - dot(Texcoord - 0.5, Texcoord - 0.5);
   float shade = 2.0 / (1.0 + exp(12.0 * range)); 
   
   vec4 colour = texture2D( baseMap, Texcoord );
   //colour *= fadingRate;
   gl_FragColor = colour;
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/ 
   
   float fade = pow(dot(Texcoord, Texcoord), shape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColor, 0.0)); 
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float time;
uniform float lifespan;
uniform float speed;
uniform float spread;
uniform float freq;
uniform float height;
uniform float shape;
uniform float size;
uniform mat4 viewInver;
uniform vec4 position;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   /*
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   //Pos = rot * Pos;

   Pos.z -= 95.0;
   Pos.y += 35.0;
   
   float t = mod(freq * time, lifespan);
   
   for (float i = 0.0; i <= 1.0; i = i + 0.01)
   {
      if (Pos.z == i - 95.0)
      {
         if (t-(i*5.0) < 0.0)
         {
            i= -i;
         }
         Pos.y += speed * (t-(i*5.0)); 
         Pos.x += spread * (t-(i*5.0)) * cos(300.0 * gl_Vertex.z);
         Pos.z += spread * (t-(i*5.0)) * sin(300.0 * gl_Vertex.z);
         Pos.y += 0.5 * (t-(i*5.0));
      }
   }
   
   //fadingRate= (1 -t/ lifespan);
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   */
   
   float t = fract(gl_Vertex.z + speed * time);
   
   float s = pow(t, shape);

   vec3 pos;
   
   pos.x = spread * s * cos(62.0 * gl_Vertex.z);
   pos.z = spread * s * sin(163.0 * gl_Vertex.z);
   
   pos.y = height * t;
  
   pos += size * (gl_Vertex.x * viewInver[0] + gl_Vertex.y * viewInver[1]).xyz;
   pos += position.xyz;

   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(pos,1.0);
   
   Texcoord = gl_Vertex.xy;
   vColor    = 1.0 - t; 
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="1.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="lifespan" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="speed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="spread" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="freq" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="shape" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="size" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="2.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmVectorVariable NAME="position" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="35.000000" VALUE_2="-95.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="Flame" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Flame.tga" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="FireBase" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FireBase.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Flame" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="height" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="position" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="shape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="size" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="speed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="spread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInver" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="righttorchbase" API="OpenGL" PASS_INDEX="16" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="4" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0, 0.0,
               sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rz;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;

   Pos.x += 98.0;
   Pos.y += 25.0; 
            
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   //vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   //ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   //LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   //Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.025000" VALUE_1="0.200000" VALUE_2="0.025000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bark" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="righttorch" API="OpenGL" PASS_INDEX="17" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;
uniform float shape;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;

void main( void )
{
   /*
   float x = Texcoord.x;
   float y = Texcoord.y;
   float range = 4.0 - dot(Texcoord - 0.5, Texcoord - 0.5);
   float shade = 2.0 / (1.0 + exp(12.0 * range)); 
   
   vec4 colour = texture2D( baseMap, Texcoord );
   //colour *= fadingRate;
   gl_FragColor = colour;
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/ 
   
   float fade = pow(dot(Texcoord, Texcoord), shape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColor, 0.0)); 
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float time;
uniform float lifespan;
uniform float speed;
uniform float spread;
uniform float freq;
uniform float height;
uniform float shape;
uniform float size;
uniform mat4 viewInver;
uniform vec4 position;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   /*
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   //Pos = rot * Pos;

   Pos.z -= 95.0;
   Pos.y += 35.0;
   
   float t = mod(freq * time, lifespan);
   
   for (float i = 0.0; i <= 1.0; i = i + 0.01)
   {
      if (Pos.z == i - 95.0)
      {
         if (t-(i*5.0) < 0.0)
         {
            i= -i;
         }
         Pos.y += speed * (t-(i*5.0)); 
         Pos.x += spread * (t-(i*5.0)) * cos(300.0 * gl_Vertex.z);
         Pos.z += spread * (t-(i*5.0)) * sin(300.0 * gl_Vertex.z);
         Pos.y += 0.5 * (t-(i*5.0));
      }
   }
   
   //fadingRate= (1 -t/ lifespan);
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   */
   
   float t = fract(gl_Vertex.z + speed * time);
   
   float s = pow(t, shape);

   vec3 pos;
   
   pos.x = spread * s * cos(62.0 * gl_Vertex.z);
   pos.z = spread * s * sin(163.0 * gl_Vertex.z);
   
   pos.y = height * t;
  
   pos += size * (gl_Vertex.x * viewInver[0] + gl_Vertex.y * viewInver[1]).xyz;
   pos += position.xyz;

   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(pos,1.0);
   
   Texcoord = gl_Vertex.xy;
   vColor    = 1.0 - t; 
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="1.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="lifespan" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="speed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="spread" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.300000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="freq" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="size" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="2.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmVectorVariable NAME="position" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="95.000000" VALUE_1="35.000000" VALUE_2="0.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="shape" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="FireBase" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Flame.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FireBase" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="height" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="position" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="shape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="size" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="speed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="spread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInver" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="lefttorchbase" API="OpenGL" PASS_INDEX="18" ENABLED="TRUE">
    <RmModelReference NAME="Cube" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord );
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(20.0 * (PI/180.0)), -sin(20.0 * (PI/180.0)), 0.0, 0.0,
               sin(20.0 * (PI/180.0)), cos(20.0 * (PI/180.0)), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rz;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;

   Pos.x -= 98.0;
   Pos.y += 25.0; 
            
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   //ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   //LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   //Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.025000" VALUE_1="0.200000" VALUE_2="0.025000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bark" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="lefttorch" API="OpenGL" PASS_INDEX="19" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;
uniform float shape;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;

void main( void )
{
   /*
   float x = Texcoord.x;
   float y = Texcoord.y;
   float range = 4.0 - dot(Texcoord - 0.5, Texcoord - 0.5);
   float shade = 2.0 / (1.0 + exp(12.0 * range)); 
   
   vec4 colour = texture2D( baseMap, Texcoord );
   //colour *= fadingRate;
   gl_FragColor = colour;
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/ 
   
   float fade = pow(dot(Texcoord, Texcoord), shape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColor, 0.0)); 
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float time;
uniform float lifespan;
uniform float speed;
uniform float spread;
uniform float freq;
uniform float height;
uniform float shape;
uniform float size;
uniform mat4 viewInver;
uniform vec4 position;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   /*
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   //Pos = rot * Pos;

   Pos.z -= 95.0;
   Pos.y += 35.0;
   
   float t = mod(freq * time, lifespan);
   
   for (float i = 0.0; i <= 1.0; i = i + 0.01)
   {
      if (Pos.z == i - 95.0)
      {
         if (t-(i*5.0) < 0.0)
         {
            i= -i;
         }
         Pos.y += speed * (t-(i*5.0)); 
         Pos.x += spread * (t-(i*5.0)) * cos(300.0 * gl_Vertex.z);
         Pos.z += spread * (t-(i*5.0)) * sin(300.0 * gl_Vertex.z);
         Pos.y += 0.5 * (t-(i*5.0));
      }
   }
   
   //fadingRate= (1 -t/ lifespan);
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   */
   
   float t = fract(gl_Vertex.z + speed * time);
   
   float s = pow(t, shape);

   vec3 pos;
   
   pos.x = spread * s * cos(62.0 * gl_Vertex.z);
   pos.z = spread * s * sin(163.0 * gl_Vertex.z);
   
   pos.y = height * t;
  
   pos += size * (gl_Vertex.x * viewInver[0] + gl_Vertex.y * viewInver[1]).xyz;
   pos += position.xyz;

   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(pos,1.0);
   
   Texcoord = gl_Vertex.xy;
   vColor    = 1.0 - t; 
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="1.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="lifespan" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="speed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="spread" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.300000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="freq" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="size" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="2.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmVectorVariable NAME="position" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-95.000000" VALUE_1="35.000000" VALUE_2="0.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="shape" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="FireBase" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Flame.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FireBase" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="height" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="position" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="shape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="size" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="speed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="spread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInver" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="firewood" API="OpenGL" PASS_INDEX="5" ENABLED="TRUE">
    <RmModelReference NAME="firewood" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float lightIntensity;
uniform vec4 myColor;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = (texture2D(baseMap, Texcoord) * myColor)/2.0;
   /*
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor ; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   /*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.y -= 67.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = mat3(rot) * gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="10.000000" VALUE_1="10.000000" VALUE_2="10.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmColorVariable NAME="myColor" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.509804" VALUE_1="0.321569" VALUE_2="0.003922" VALUE_3="1.000000"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="bark" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="myColor" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="chest" API="OpenGL" PASS_INDEX="20" ENABLED="TRUE">
    <RmModelReference NAME="chest" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D( baseMap, Texcoord ) / 2.0;
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular ) / 5.0;
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI), -sin(PI), 0.0,           
               0.0, sin(PI), cos(PI), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI), 0.0, sin(PI), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI), 0.0, cos(PI), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Ry;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.x += 65.0;
   Pos.y -= 75.0;
   Pos.z -= 75.0;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="15.000000" VALUE_1="15.000000" VALUE_2="15.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="woodchest" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="wood_planks_new_0025_01_s.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="woodchest" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="back" API="OpenGL" PASS_INDEX="0" ENABLED="TRUE">
    <RmModelReference NAME="ScreenAlignedQuad" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 Normal;
varying vec3 fvObjectPosition;

void main( void )
{
   //gl_FragColor = texture2D( baseMap, Texcoord );
   //*
   //vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvLightDirection = normalize( lightPos - fvObjectPosition );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = max(dot( fvNormal, fvLightDirection ), 0.0); 
   
   float dist = length(LightDirection);
   float att = (1.0 / (0.1 * dist));
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   if (fNDotL > 0.0)
   {
   
      vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
      vec3  fvViewDirection  = normalize( ViewDirection );
      float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor * 0.4; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor * att; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) ) * att;
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );// / 5.0;
   }
   else
   {
       gl_FragColor = fvAmbient * fvBaseColor * 0.4; 
   }
   
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;

uniform mat4 matView;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 fvObjectPosition;
varying vec3 Normal;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   Pos.z -= 100.0;
   Pos *= scale;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   fvObjectPosition = vec3(gl_ModelViewMatrix * Pos);
   
   ViewDirection  = vec3(fvEyePosition) - fvObjectPosition.xyz;
   
   lightPos = vec3(matView * vec4(0, 40.0, -95.0, 1));
   LightDirection = lightPos - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="75.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="base" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="matView" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="shroom1" API="OpenGL" PASS_INDEX="21" ENABLED="TRUE">
    <RmModelReference NAME="shroom" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D(baseMap, Texcoord);
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular ) / 5.0;
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI), 0.0, sin(PI), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI), 0.0, cos(PI), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   //Pos.x += 65.0;
   Pos.y -= 75.0;
   Pos.z -= 75.0;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.100000" VALUE_1="0.100000" VALUE_2="0.100000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="shroomtex" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="GRIB.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="shroomtex" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="kettle" API="OpenGL" PASS_INDEX="7" ENABLED="TRUE">
    <RmModelReference NAME="Teapot" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;
uniform sampler2D normalMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
//varying vec3 Normal;

void main( void )
{
   //gl_FragColor = texture2D( baseMap, Texcoord );
   //*
   vec3 N = 2.0 * texture2D(normalMap, Texcoord).xyz - 1.0;
   
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( N );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( LightDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float bumpHeight;
uniform float bumpDensity;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

attribute vec3 rm_Binormal;
attribute vec3 rm_Tangent;
   
void main( void )
{
   vec3 vBinormal = gl_NormalMatrix * rm_Binormal;
   vec3 vTangent = gl_NormalMatrix * rm_Tangent;
   
   
   vBinormal = normalize(vBinormal);
   vTangent = normalize(vTangent);
   
   
   vec4 Pos = gl_Vertex;
   
   Pos.y -= 140.0;
   Pos *= scale;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   Normal = normalize(Normal);
   mat3 View2Tangent = mat3((vTangent * bumpHeight) , (vBinormal * bumpDensity) , Normal );
   ViewDirection *= View2Tangent;
   LightDirection *= View2Tangent;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.250000" VALUE_1="0.250000" VALUE_2="0.250000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="bumpHeight" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="2.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bumpDensity" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="rust" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-tileable.png" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="rustNormal" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="metall003-new-nm.png" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rust" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="normalMap" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="rustNormal" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmSampler NAME="normalMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bumpHeight" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="bumpDensity" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="shroom2" API="OpenGL" PASS_INDEX="22" ENABLED="TRUE">
    <RmModelReference NAME="shroom" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D(baseMap, Texcoord);
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular ) / 5.0;
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI), 0.0, sin(PI), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI), 0.0, cos(PI), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.x += 7.0;
   Pos.y -= 75.0;
   Pos.z -= 80.0;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.200000" VALUE_1="0.200000" VALUE_2="0.200000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="shroomtex" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="GRIB.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="shroomtex" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="shroom3" API="OpenGL" PASS_INDEX="23" ENABLED="TRUE">
    <RmModelReference NAME="shroom" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   gl_FragColor = texture2D(baseMap, Texcoord);
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular ) / 5.0;
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI), 0.0, sin(PI), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI), 0.0, cos(PI), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.x += 5.0;
   Pos.y -= 75.0;
   Pos.z -= 72.0;
               
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.050000" VALUE_1="0.050000" VALUE_2="0.050000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="shroomtex" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="GRIB.jpg" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="shroomtex" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="fire" API="OpenGL" PASS_INDEX="24" ENABLED="TRUE">
    <RmModelReference NAME="Model" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="8" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendSourceRGB" API="OpenGL" STATE="48" VALUE="3" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float lightIntensity;
uniform vec4 myColor;
uniform vec2 freq;
uniform float speed;
uniform vec2 T0;
varying vec3 scale;
uniform vec2 texscale;

uniform sampler2D baseMap;
uniform sampler2D FireShape;
uniform sampler2D FireDist;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
uniform float time;

void main( void )
{
   vec2 tex = Texcoord;
   tex.y = 1.0 - tex.y;
   tex.x = texscale.x * (Texcoord.x - 0.5) + 0.5;
   tex.y= texscale.y * tex.y;  
   tex.x += 0.2 * tex.y * sin(freq.x * (Texcoord.y + time));
   tex.y += 0.2 * tex.y * sin(freq.y * (Texcoord.x + time));
   vec4 shape = texture2D(FireShape , tex);
   vec4 color = texture2D(baseMap, tex);  
   vec4 noise = texture2D(FireDist, Texcoord + (speed * time));
    
    vec4 noiseShape = shape * noise;
   
   
   vec4 colour = 5.0 * Texcoord.y * color * noiseShape;
   colour.w = noiseShape.x * noiseShape.y * noiseShape.z;
   
   gl_FragColor = colour;
   //gl_FragColor = texture2D(baseMap, Texcoord) * myColor;
   /*
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( ViewDirection );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor ; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   /*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
uniform mat4 viewInv;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI), -sin(PI), 0.0, 0.0,
               sin(PI), cos(PI), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rz;
   
   Pos *= scale;
   
   //Pos = rot * Pos;
   Pos.y -= 51.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   Normal         = gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="10.000000" VALUE_1="10.000000" VALUE_2="10.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmDynamicVariable NAME="texscale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="2" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
     <RmDynamicVariableValueContainer>
      <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.600000"/>
      <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.600000"/>
     </RmDynamicVariableValueContainer>
    </RmDynamicVariable>
    <RmColorVariable NAME="myColor" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE_0="0.509804" VALUE_1="0.321569" VALUE_2="0.003922" VALUE_3="1.000000"/>
    <Rm2DTextureVariable NAME="FireDist" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FireDistortion.tga" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="FireShape" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FireOpacity.tga" ORIGIN="0"/>
    <Rm2DTextureVariable NAME="FireBase" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="FireBase.tga" ORIGIN="0"/>
    <RmTextureObject NAME="FireDist" API="OpenGL" STATE_INDEX="1" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FireDist" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="FireShape" API="OpenGL" STATE_INDEX="2" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FireShape" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="FireBase" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="FireDist" API="" REGISTER="-1"/>
    <RmSampler NAME="FireShape" API="" REGISTER="-1"/>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="freq" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="speed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="texscale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="right" API="OpenGL" PASS_INDEX="1" ENABLED="TRUE">
    <RmModelReference NAME="ScreenAlignedQuad" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 Normal;
varying vec3 fvObjectPosition;

void main( void )
{
   //gl_FragColor = texture2D( baseMap, Texcoord );
   //*
   vec3  fvLightDirection = normalize( LightDirection );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = max(dot( fvNormal, fvLightDirection ), 0.0); 
   
   float dist = length(LightDirection);
   float att = (1.0 / (0.1 * dist));
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   if (fNDotL > 0.0)
   {
   
      vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
      vec3  fvViewDirection  = normalize( ViewDirection );
      float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor * 0.4; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor * att; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) ) * att;
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );// / 5.0;
   }
   else
   {
       gl_FragColor = fvAmbient * fvBaseColor * 0.4; 
   }
   
   //*/   
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;

uniform mat4 matView;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 lightPos;
varying vec3 fvObjectPosition;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(PI/2.0), -sin(PI/2.0), 0.0,           
               0.0, sin(PI/2.0), cos(PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Ry;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.x += 100.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   fvObjectPosition = vec3(gl_ModelViewMatrix * Pos);
   
   ViewDirection  = vec3(fvEyePosition) - fvObjectPosition.xyz;
   
   lightPos = vec3(matView * vec4(95.0, 40.0, 0, 1));
   LightDirection = lightPos - fvObjectPosition.xyz;
   Normal = vec3(rot * vec4(gl_NormalMatrix * gl_Normal, 1));
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="75.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="base" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="matView" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="roof" API="OpenGL" PASS_INDEX="3" ENABLED="TRUE">
    <RmModelReference NAME="ScreenAlignedQuad" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform float lightIntensity;
uniform mat4 viewInver;


uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

void main( void )
{
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor ; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular )/ 5.0;
       
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec4 fvEyePosition;
uniform vec4 scale;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;

const float PI = 3.1415926535897932384626433832795;
   
void main( void )
{
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-PI/2.0), -sin(-PI/2.0), 0.0,           
               0.0, sin(-PI/2.0), cos(-PI/2.0), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   Pos = rot * Pos;
   Pos.y += 75.0;
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - Pos.xyz;
   LightDirection = fvLightPosition - Pos.xyz;
   Normal         = mat3(rot) * gl_NormalMatrix * gl_Normal;
   
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="100.000000" VALUE_1="100.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="base" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fSpecularPower" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvAmbient" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvDiffuse" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvEyePosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvLightPosition" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="fvSpecular" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="scale" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInver" API="" REGISTER="-1"/>
   </RmGLPass>
   <RmGLPass NAME="fog" API="OpenGL" PASS_INDEX="25" ENABLED="TRUE">
    <RmModelReference NAME="QuadArray" API=""/>
    <RmRenderStateBlock NAME="Render State" API="OpenGL">
     <RmState NAME="GL_CullMode" API="OpenGL" STATE="8" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendEnable" API="OpenGL" STATE="46" VALUE="1" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestRGB" API="OpenGL" STATE="49" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_BlendDestAlpha" API="OpenGL" STATE="51" VALUE="2" USAGE="RENDER_STATE"/>
     <RmState NAME="GL_WriteMaskDepth" API="OpenGL" STATE="54" VALUE="0" USAGE="RENDER_STATE"/>
    </RmRenderStateBlock>
    <RmGLShader NAME="Fragment Program" API="OpenGL" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec4 fvAmbient;
uniform vec4 fvSpecular;
uniform vec4 fvDiffuse;
uniform float fSpecularPower;
uniform mat4 viewInver;
uniform float shape;

uniform sampler2D baseMap;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;

void main( void )
{
   /*
   float x = Texcoord.x;
   float y = Texcoord.y;
   float range = 4.0 - dot(Texcoord - 0.5, Texcoord - 0.5);
   float shade = 2.0 / (1.0 + exp(12.0 * range)); 
   
   vec4 colour = texture2D( baseMap, Texcoord );
   //colour *= fadingRate;
   gl_FragColor = colour;
   /*
   vec3  fvLightDirection = normalize( (vec4(LightDirection, 1) * viewInver).xyz );
   vec3  fvNormal         = normalize( Normal );
   float fNDotL           = dot( fvNormal, fvLightDirection ); 
   
   vec3  fvReflection     = normalize( ( ( 2.0 * fvNormal ) * fNDotL ) - fvLightDirection ); 
   vec3  fvViewDirection  = normalize( (vec4(ViewDirection, 1) * viewInver).xyz );
   float fRDotV           = max( 0.0, dot( fvReflection, fvViewDirection ) );
   
   vec4  fvBaseColor      = texture2D( baseMap, Texcoord );
   
   vec4  fvTotalAmbient   = fvAmbient * fvBaseColor; 
   vec4  fvTotalDiffuse   = fvDiffuse * fNDotL * fvBaseColor; 
   vec4  fvTotalSpecular  = fvSpecular * ( pow( fRDotV, fSpecularPower ) );
  
   gl_FragColor = ( fvTotalAmbient + fvTotalDiffuse + fvTotalSpecular );
   //*/ 
   
   float fade = pow(dot(Texcoord, Texcoord), shape);
   gl_FragColor = (1.0 - fade) * texture2D(baseMap, vec2(vColor, 0.0)); 
}]]></RmShaderCode></RmGLShader>
    <RmGLShader NAME="Vertex Program" API="OpenGL" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;
uniform vec4 scale;
uniform float time;
uniform float lifespan;
uniform float speed;
uniform float spread;
uniform float freq;
uniform float height;
uniform float shape;
uniform float size;
uniform mat4 viewInver;
uniform vec4 position;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
varying float vColor;
//varying float fadingRate;
   
const float PI = 3.1415926535897932384626433832795;

void main( void )
{
   /*
   vec4 Pos = gl_Vertex;
   
   mat4 Rx = mat4(1.0, 0.0, 0.0, 0.0,
               0.0, cos(-20.0 * (PI/180.0)), -sin(-20.0 * (PI/180.0)), 0.0,           
               0.0, sin(-20.0 * (PI/180.0)), cos(-20.0 * (PI/180.0)), 0.0,
               0.0, 0.0, 0.0, 1.0);
   mat4 Ry = mat4(cos(PI/2.0), 0.0, sin(PI/2.0), 0.0,
               0.0, 1.0, 0.0, 0.0,           
               -sin(PI/2.0), 0.0, cos(PI/2.0), 0.0,
               0.0 ,0.0, 0.0 , 1.0);
   mat4 Rz = mat4(cos(PI/2.0), -sin(PI/2.0), 0.0, 0.0,
               sin(PI/2.0), cos(PI/2.0), 0.0, 0.0,           
               0.0, 0.0, 1.0, 0.0,
               0.0, 0.0, 0.0, 1.0);
    
   mat4 rot = Rx;
   
   
   Pos *= scale;
   
   //Pos = rot * Pos;

   Pos.z -= 95.0;
   Pos.y += 35.0;
   
   float t = mod(freq * time, lifespan);
   
   for (float i = 0.0; i <= 1.0; i = i + 0.01)
   {
      if (Pos.z == i - 95.0)
      {
         if (t-(i*5.0) < 0.0)
         {
            i= -i;
         }
         Pos.y += speed * (t-(i*5.0)); 
         Pos.x += spread * (t-(i*5.0)) * cos(300.0 * gl_Vertex.z);
         Pos.z += spread * (t-(i*5.0)) * sin(300.0 * gl_Vertex.z);
         Pos.y += 0.5 * (t-(i*5.0));
      }
   }
   
   //fadingRate= (1 -t/ lifespan);
           
   gl_Position = gl_ModelViewProjectionMatrix * Pos;
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   
   ViewDirection  = fvEyePosition - fvObjectPosition.xyz;
   LightDirection = fvLightPosition - fvObjectPosition.xyz;
   //LightDirection = vec3(0, -1, 1);
   Normal         = gl_NormalMatrix * gl_Normal;
   */
   
   float t = fract(gl_Vertex.z + speed * time);
   
   float s = pow(t, shape);

   vec3 pos;
   
   pos.x = spread * s * cos(62.0 * gl_Vertex.z);
   pos.z = spread * s * sin(163.0 * gl_Vertex.z);
   
   pos.y = height * t;
  
   pos += size * (gl_Vertex.x * viewInver[0] + gl_Vertex.y * viewInver[1]).xyz;
   pos += position.xyz;

   
   gl_Position = gl_ModelViewProjectionMatrix * vec4(pos,1.0);
   
   Texcoord = gl_Vertex.xy;
   vColor    = 1.0 - t; 
}]]></RmShaderCode></RmGLShader>
    <RmStreamMapReference NAME="Stream Mapping" API=""/>
    <RmVectorVariable NAME="scale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="1.000000" VALUE_2="1.000000" VALUE_3="1.000000" MIN="0.000000" MAX="100.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <RmFloatVariable NAME="lifespan" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="speed" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.100000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="spread" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="100.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="freq" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="5.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="shape" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="size" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="10.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
    <RmVectorVariable NAME="position" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.000000" VALUE_1="-70.000000" VALUE_2="0.000000" VALUE_3="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
    <Rm2DTextureVariable NAME="Flame" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="cloud.tga" ORIGIN="0"/>
    <RmTextureObject NAME="baseMap" API="OpenGL" STATE_INDEX="0" VERTEX_TEXTURE="FALSE">
     <RmTextureReference NAME="Flame" API=""/>
     <RmState NAME="GL_TextureMinify" API="OpenGL" STATE="4" VALUE="6" USAGE="SAMPLER_STATE"/>
     <RmState NAME="GL_TextureMagnify" API="OpenGL" STATE="5" VALUE="1" USAGE="SAMPLER_STATE"/>
    </RmTextureObject>
    <RmSampler NAME="baseMap" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="height" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="position" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="shape" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="size" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="speed" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="spread" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="time" API="" REGISTER="-1"/>
    <RmShaderConstant NAME="viewInver" API="" REGISTER="-1"/>
   </RmGLPass>
  </RmOpenGLEffect>
 </RmEffectWorkspace>
</RENDER_MONKEY>
